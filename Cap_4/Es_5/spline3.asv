% y = spline3(xi, fi, x, tipo)
%   Determina le espressioni degli n polinomi che formano una spline
%   cubica naturale o con condizioni not-a-knot e la valuta su una seria 
%   di punti.
%
% Input:
%   -xi: vettore contenente gli n+1 nodi di interpolazione;
%   -fi: vettore contenente i valori assunti dalla funzione da
%   approssimare nei nodi in ptx;
%   -x: vettore di m punti su cui si vuole valutare la spline.
%   -tipo: true se la spline implementa condizioni not-a-knot, false se
%   invece è una spline naturale.
% Output:
%   -y: vettore di m valori contenente la valutazione dei punti in x
%   della spline (NaN se un punto non è valutabile).

18 function [s] = splineCubica(ptx, fi, nak)
phi = zeros(length(ptx)?2, 1);
20 xi = zeros(length(ptx)?2, 1);
dd = zeros(length(ptx)?2, 1);
22 for i=2:length(ptx)?1
hi = ptx(i) ? ptx(i?1);
24 hi1 = ptx(i+1) ? ptx(i);
phi(i) = hi/(hi+hi1);
26 xi(i) = hi1/(hi+hi1);
dd(i) = differenzaDivisa(ptx(i?1:i+1), fi(i?1:i+1));
28 end
if nak
30 mi = risolviSistemaSplineNotAKnot(phi, xi, dd);
else
32 mi = risolviSistemaSplineNaturale(phi, xi, dd);
end
34 s = espressioniSplineCubica(ptx, fi, mi);
end